/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.paid.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.paid.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = OrderLineCreate.Builder.class)
public final class OrderLineCreate {
    private final Optional<String> agentId;

    private final Optional<String> agentExternalId;

    private final Optional<String> name;

    private final Optional<String> description;

    private final Map<String, Object> additionalProperties;

    private OrderLineCreate(
            Optional<String> agentId,
            Optional<String> agentExternalId,
            Optional<String> name,
            Optional<String> description,
            Map<String, Object> additionalProperties) {
        this.agentId = agentId;
        this.agentExternalId = agentExternalId;
        this.name = name;
        this.description = description;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("agentId")
    public Optional<String> getAgentId() {
        return agentId;
    }

    @JsonProperty("agentExternalId")
    public Optional<String> getAgentExternalId() {
        return agentExternalId;
    }

    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    @JsonProperty("description")
    public Optional<String> getDescription() {
        return description;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof OrderLineCreate && equalTo((OrderLineCreate) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(OrderLineCreate other) {
        return agentId.equals(other.agentId)
                && agentExternalId.equals(other.agentExternalId)
                && name.equals(other.name)
                && description.equals(other.description);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.agentId, this.agentExternalId, this.name, this.description);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> agentId = Optional.empty();

        private Optional<String> agentExternalId = Optional.empty();

        private Optional<String> name = Optional.empty();

        private Optional<String> description = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(OrderLineCreate other) {
            agentId(other.getAgentId());
            agentExternalId(other.getAgentExternalId());
            name(other.getName());
            description(other.getDescription());
            return this;
        }

        @JsonSetter(value = "agentId", nulls = Nulls.SKIP)
        public Builder agentId(Optional<String> agentId) {
            this.agentId = agentId;
            return this;
        }

        public Builder agentId(String agentId) {
            this.agentId = Optional.ofNullable(agentId);
            return this;
        }

        @JsonSetter(value = "agentExternalId", nulls = Nulls.SKIP)
        public Builder agentExternalId(Optional<String> agentExternalId) {
            this.agentExternalId = agentExternalId;
            return this;
        }

        public Builder agentExternalId(String agentExternalId) {
            this.agentExternalId = Optional.ofNullable(agentExternalId);
            return this;
        }

        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public Builder name(Optional<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        @JsonSetter(value = "description", nulls = Nulls.SKIP)
        public Builder description(Optional<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(String description) {
            this.description = Optional.ofNullable(description);
            return this;
        }

        public OrderLineCreate build() {
            return new OrderLineCreate(agentId, agentExternalId, name, description, additionalProperties);
        }
    }
}
