/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.paid.api.resources.usage;

import com.paid.api.core.ClientOptions;
import com.paid.api.core.RequestOptions;
import com.paid.api.resources.usage.requests.UsageRecordBulkRequest;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncUsageClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawUsageClient rawClient;

    public AsyncUsageClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawUsageClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawUsageClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<List<Object>> recordBulk() {
        return this.rawClient.recordBulk().thenApply(response -> response.body());
    }

    public CompletableFuture<List<Object>> recordBulk(UsageRecordBulkRequest request) {
        return this.rawClient.recordBulk(request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<Object>> recordBulk(UsageRecordBulkRequest request, RequestOptions requestOptions) {
        return this.rawClient.recordBulk(request, requestOptions).thenApply(response -> response.body());
    }
}
