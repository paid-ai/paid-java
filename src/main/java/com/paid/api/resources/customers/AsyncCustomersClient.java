/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.paid.api.resources.customers;

import com.paid.api.core.ClientOptions;
import com.paid.api.core.RequestOptions;
import com.paid.api.resources.customers.requests.CustomerCreate;
import com.paid.api.types.Customer;
import com.paid.api.types.CustomerUpdate;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncCustomersClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawCustomersClient rawClient;

    public AsyncCustomersClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawCustomersClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawCustomersClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<List<Customer>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<List<Customer>> list(RequestOptions requestOptions) {
        return this.rawClient.list(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> create(CustomerCreate request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> create(CustomerCreate request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> get(String customerId) {
        return this.rawClient.get(customerId).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> get(String customerId, RequestOptions requestOptions) {
        return this.rawClient.get(customerId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> update(String customerId) {
        return this.rawClient.update(customerId).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> update(String customerId, CustomerUpdate request) {
        return this.rawClient.update(customerId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> update(
            String customerId, CustomerUpdate request, RequestOptions requestOptions) {
        return this.rawClient.update(customerId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String customerId) {
        return this.rawClient.delete(customerId).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String customerId, RequestOptions requestOptions) {
        return this.rawClient.delete(customerId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> getByExternalId(String externalId) {
        return this.rawClient.getByExternalId(externalId).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> getByExternalId(String externalId, RequestOptions requestOptions) {
        return this.rawClient.getByExternalId(externalId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> updateByExternalId(String externalId) {
        return this.rawClient.updateByExternalId(externalId).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> updateByExternalId(String externalId, CustomerUpdate request) {
        return this.rawClient.updateByExternalId(externalId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<Customer> updateByExternalId(
            String externalId, CustomerUpdate request, RequestOptions requestOptions) {
        return this.rawClient
                .updateByExternalId(externalId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<Void> deleteByExternalId(String externalId) {
        return this.rawClient.deleteByExternalId(externalId).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> deleteByExternalId(String externalId, RequestOptions requestOptions) {
        return this.rawClient.deleteByExternalId(externalId, requestOptions).thenApply(response -> response.body());
    }
}
