/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.paid.api.resources.orders;

import com.paid.api.core.ClientOptions;
import com.paid.api.core.RequestOptions;
import com.paid.api.core.Suppliers;
import com.paid.api.resources.orders.lines.AsyncLinesClient;
import com.paid.api.resources.orders.requests.OrderCreate;
import com.paid.api.types.Order;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import java.util.function.Supplier;

public class AsyncOrdersClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawOrdersClient rawClient;

    protected final Supplier<AsyncLinesClient> linesClient;

    public AsyncOrdersClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawOrdersClient(clientOptions);
        this.linesClient = Suppliers.memoize(() -> new AsyncLinesClient(clientOptions));
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawOrdersClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<List<Order>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<List<Order>> list(RequestOptions requestOptions) {
        return this.rawClient.list(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Order> create(OrderCreate request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Order> create(OrderCreate request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Order> get(String orderId) {
        return this.rawClient.get(orderId).thenApply(response -> response.body());
    }

    public CompletableFuture<Order> get(String orderId, RequestOptions requestOptions) {
        return this.rawClient.get(orderId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String orderId) {
        return this.rawClient.delete(orderId).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String orderId, RequestOptions requestOptions) {
        return this.rawClient.delete(orderId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Order> activate(String orderId) {
        return this.rawClient.activate(orderId).thenApply(response -> response.body());
    }

    public CompletableFuture<Order> activate(String orderId, RequestOptions requestOptions) {
        return this.rawClient.activate(orderId, requestOptions).thenApply(response -> response.body());
    }

    public AsyncLinesClient lines() {
        return this.linesClient.get();
    }
}
