/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.paid.api.resources.agents;

import com.paid.api.core.ClientOptions;
import com.paid.api.core.RequestOptions;
import com.paid.api.resources.agents.requests.AgentCreate;
import com.paid.api.types.Agent;
import com.paid.api.types.AgentUpdate;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncAgentsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawAgentsClient rawClient;

    public AsyncAgentsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawAgentsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawAgentsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<List<Agent>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<List<Agent>> list(RequestOptions requestOptions) {
        return this.rawClient.list(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> create(AgentCreate request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> create(AgentCreate request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> get(String agentId) {
        return this.rawClient.get(agentId).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> get(String agentId, RequestOptions requestOptions) {
        return this.rawClient.get(agentId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> update(String agentId) {
        return this.rawClient.update(agentId).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> update(String agentId, AgentUpdate request) {
        return this.rawClient.update(agentId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> update(String agentId, AgentUpdate request, RequestOptions requestOptions) {
        return this.rawClient.update(agentId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String agentId) {
        return this.rawClient.delete(agentId).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String agentId, RequestOptions requestOptions) {
        return this.rawClient.delete(agentId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> getByExternalId(String externalId) {
        return this.rawClient.getByExternalId(externalId).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> getByExternalId(String externalId, RequestOptions requestOptions) {
        return this.rawClient.getByExternalId(externalId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> updateByExternalId(String externalId) {
        return this.rawClient.updateByExternalId(externalId).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> updateByExternalId(String externalId, AgentUpdate request) {
        return this.rawClient.updateByExternalId(externalId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<Agent> updateByExternalId(
            String externalId, AgentUpdate request, RequestOptions requestOptions) {
        return this.rawClient
                .updateByExternalId(externalId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<Void> deleteByExternalId(String externalId) {
        return this.rawClient.deleteByExternalId(externalId).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> deleteByExternalId(String externalId, RequestOptions requestOptions) {
        return this.rawClient.deleteByExternalId(externalId, requestOptions).thenApply(response -> response.body());
    }
}
